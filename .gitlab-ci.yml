# alerter: Alerter to chat servers
# Copyright (C) 2019 The alerter developers
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

---
variables:
  CARGO_HOME: $CI_PROJECT_DIR/.cargo

stages:
  - build
  - test
  - package

build-debug:
  stage: build
  image: rust:latest
  script:
    - apt-get update
    - apt-get -y --no-install-recommends install libsystemd-dev cmake
    - cargo build
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - target
      - .cargo
  artifacts:
    paths:
      - target/debug/alert
      - target/debug/alerter

build-release:
  stage: build
  image: rust:latest
  script:
    - apt-get update
    - apt-get -y --no-install-recommends install libsystemd-dev cmake
    - cargo build --release
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - target
      - .cargo
  only:
    - tags

format:
  stage: build
  image: rust:latest
  script:
    - apt-get update
    - apt-get -y --no-install-recommends install libsystemd-dev cmake
    - rustup component add rustfmt
    - cargo fmt --all -- --check
  cache:
    key: ${CI_JOB_NAME}
    policy: pull
    paths:
      - target
      - .cargo

audit:
  stage: build
  image: rust:latest
  script:
    - apt-get update
    - apt-get -y --no-install-recommends install libsystemd-dev cmake
    - cargo install cargo-audit
    - cargo audit
        --ignore RUSTSEC-2020-0071
        --ignore RUSTSEC-2020-0159
        || true
  cache:
    key: ${CI_JOB_NAME}
    policy: pull
    paths:
      - target
      - .cargo

clippy:
  stage: build
  image: rust:latest
  script:
    - apt-get update
    - apt-get -y --no-install-recommends install libsystemd-dev cmake
    - rustup component add clippy
    - cargo clippy --release -j 8 -- -D clippy::all
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - target
      - .cargo

test:
  stage: build
  image: rust:latest
  script:
    - apt-get update
    - apt-get -y --no-install-recommends install libsystemd-dev cmake
    - cargo test
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - target
      - .cargo

e2e test:
  stage: test
  image: openjdk:11-jdk
  variables:
    GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  script:
    - apt-get update
    - export GRADLE_USER_HOME=`pwd`/.gradle
    - cd test
    - ./gradlew check --info
  dependencies:
    - build-debug
  artifacts:
    paths:
      - test/build/reports/tests/test
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - .gradle
      - build

archlinux:
  stage: package
  image: archlinux:latest
  script:
    - pacman -Syu --noconfirm sudo binutils fakeroot cmake gcc make
    - cd pkg/Archlinux
    # patch makepkg so it runs as root
    - sed -i 's/EUID == 0/1 == 0/g' /usr/bin/makepkg
    - makepkg -s --nocheck --noconfirm
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - target
      - .cargo
  artifacts:
    paths:
      - pkg/Archlinux/alerter*.pkg.tar.xz*
      - pkg/Archlinux/alerter*.pkg.tar.zst*
